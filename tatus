[1mdiff --git a/src/main/java/com/projectNanuram/config/BeanProvider.java b/src/main/java/com/projectNanuram/config/BeanProvider.java[m
[1mindex 9080f73..2b2cd35 100644[m
[1m--- a/src/main/java/com/projectNanuram/config/BeanProvider.java[m
[1m+++ b/src/main/java/com/projectNanuram/config/BeanProvider.java[m
[36m@@ -2,9 +2,10 @@[m [mpackage com.projectNanuram.config;[m
 [m
 import com.fasterxml.jackson.databind.ObjectMapper;[m
 import com.projectNanuram.entity.Family;[m
[32m+[m[32mimport com.projectNanuram.entity.Person;[m[41m[m
 import com.projectNanuram.helper.DataHelper;[m
 import org.springframework.context.annotation.Bean;[m
[31m-import org.springframework.context.annotation.Configuration;[m
[32m+[m[41m[m
 import org.springframework.stereotype.Component;[m
 [m
 @Component[m
[36m@@ -21,4 +22,9 @@[m [mpublic class BeanProvider {[m
     @Bean[m
     public ObjectMapper mapper(){ return new ObjectMapper(); }[m
 [m
[32m+[m[32m    @Bean[m[41m[m
[32m+[m[32m    public Person personBeanProvider(){[m[41m[m
[32m+[m[32m        return new Person();[m[41m[m
[32m+[m[32m    }[m[41m[m
[32m+[m[41m[m
 }[m
[1mdiff --git a/src/main/java/com/projectNanuram/config/WebConfig.java b/src/main/java/com/projectNanuram/config/WebConfig.java[m
[1mindex a1def43..02d8fcc 100644[m
[1m--- a/src/main/java/com/projectNanuram/config/WebConfig.java[m
[1m+++ b/src/main/java/com/projectNanuram/config/WebConfig.java[m
[36m@@ -31,7 +31,7 @@[m [mpublic class WebConfig implements WebMvcConfigurer {[m
         irvr.setViewClass(JstlView.class);[m
         irvr.setPrefix("/WEB-INF/views/");[m
         irvr.setSuffix(".jsp");[m
[31m-        irvr.setOrder(0);[m
[32m+[m[32m        irvr.setOrder(1);[m[41m[m
         return irvr;[m
     }[m
 [m
[36m@@ -56,7 +56,7 @@[m [mpublic class WebConfig implements WebMvcConfigurer {[m
     public ViewResolver thymeleafViewResolver(){[m
         ThymeleafViewResolver vr = new ThymeleafViewResolver();[m
         vr.setTemplateEngine(templateEngine());[m
[31m-        vr.setOrder(1);[m
[32m+[m[32m        vr.setOrder(0);[m[41m[m
         return vr;[m
     }[m
 [m
[1mdiff --git a/src/main/java/com/projectNanuram/controller/HomeController.java b/src/main/java/com/projectNanuram/controller/HomeController.java[m
[1mindex 8a1b499..9b3d3a6 100644[m
[1m--- a/src/main/java/com/projectNanuram/controller/HomeController.java[m
[1m+++ b/src/main/java/com/projectNanuram/controller/HomeController.java[m
[36m@@ -242,6 +242,15 @@[m [mpublic class HomeController {[m
     public String showFamily(@PathVariable("familyId") String familyId , Model model){[m
 [m
         Family family = familyService.getFamilyById(familyId);[m
[32m+[m[32m        PropertiesResolver resolver = PropertiesResolver.getInstance();[m[41m[m
[32m+[m[32m        Map<String, List<String>> imageProperties = resolver.getImageProperties();[m[41m[m
[32m+[m[41m[m
[32m+[m[32m        for(Person person : family.getMembers()){[m[41m[m
[32m+[m[32m            String url = ImageHelper.getHostUrl(person.getImgUrl() , imageProperties.get("family"));[m[41m[m
[32m+[m[32m            System.out.println(url);[m[41m[m
[32m+[m[32m            person.setImgUrl(url);[m[41m[m
[32m+[m[32m        }[m[41m[m
[32m+[m[41m[m
         model.addAttribute("family", family);[m
         return "index";[m
 [m
[1mdiff --git a/src/main/java/com/projectNanuram/entity/Person.java b/src/main/java/com/projectNanuram/entity/Person.java[m
[1mindex ec907ac..91e8efe 100644[m
[1m--- a/src/main/java/com/projectNanuram/entity/Person.java[m
[1m+++ b/src/main/java/com/projectNanuram/entity/Person.java[m
[36m@@ -74,19 +74,20 @@[m [mpublic class Person {[m
     @Transient[m
     private CommonsMultipartFile imageFile;[m
 [m
[31m-[m
     @NotNull(message = "Marital Status could not be empty or null")[m
     private String maritalStatus;[m
 [m
[31m-    @Nullable[m
     @AssertFalse()[m
[32m+[m[32m    @Transient[m[41m[m
     private boolean isSpeciallyAble;[m
 [m
     @NotNull[m
     @Value("No")[m
[32m+[m[41m[m
     private String specialAbility;[m
 [m
[31m-//    private String mobileNumber;[m
[32m+[m[32m    @Transient[m[41m[m
[32m+[m[32m    private String fullName;[m[41m[m
     [m
     private boolean isMan;[m
     private boolean isWoman;[m
[36m@@ -348,7 +349,13 @@[m [mpublic class Person {[m
         isHead = head;[m
     }[m
 [m
[32m+[m[32m    public String getFullName() {[m[41m[m
[32m+[m[32m        return fullName;[m[41m[m
[32m+[m[32m    }[m[41m[m
 [m
[32m+[m[32m    public void setFullName(String fullName) {[m[41m[m
[32m+[m[32m        this.fullName = fullName;[m[41m[m
[32m+[m[32m    }[m[41m[m
 [m
     @Override[m
     public String toString() {[m
[1mdiff --git a/src/main/java/com/projectNanuram/helper/ImageHelper.java b/src/main/java/com/projectNanuram/helper/ImageHelper.java[m
[1mindex fa22b22..d4e9324 100644[m
[1m--- a/src/main/java/com/projectNanuram/helper/ImageHelper.java[m
[1m+++ b/src/main/java/com/projectNanuram/helper/ImageHelper.java[m
[36m@@ -88,7 +88,7 @@[m [mpublic class ImageHelper {[m
         }[m
 [m
     }[m
[31m-    private static String getFilePath(String fileName , List<String> list){[m
[32m+[m[32m    public static String getFilePath(String fileName , List<String> list){[m[41m[m
 [m
         String[] str = fileName.split("\\.");[m
         str[1] = "."+str[1];[m
[36m@@ -109,5 +109,14 @@[m [mpublic class ImageHelper {[m
         }[m
     }[m
 [m
[32m+[m[32m    public static String getHostUrl(String fileName , List<String> list){   //http://localhost:8887/family/xPXcS_1440_796.jpg[m[41m[m
[32m+[m[41m[m
[32m+[m[32m        String[] str = fileName.split("\\.");[m[41m[m
[32m+[m[32m        str[1] = "."+str[1];[m[41m[m
[32m+[m[32m        String hostUrl = PropertiesResolver.getInstance().getHostUrl();[m[41m[m
[32m+[m[32m        String url = hostUrl+list.get(0)+"/"+str[0]+"_"+list.get(1)+"_"+list.get(2)+str[1];[m[41m[m
[32m+[m[32m        return url;[m[41m[m
[32m+[m[32m    }[m[41m[m
[32m+[m[41m[m
 [m
 }[m
[1mdiff --git a/src/main/java/com/projectNanuram/helper/Processor.java b/src/main/java/com/projectNanuram/helper/Processor.java[m
[1mindex fc8b895..0256282 100644[m
[1m--- a/src/main/java/com/projectNanuram/helper/Processor.java[m
[1m+++ b/src/main/java/com/projectNanuram/helper/Processor.java[m
[36m@@ -1,154 +1,175 @@[m
[31m-    package com.projectNanuram.helper;[m
[32m+[m[32mpackage com.projectNanuram.helper;[m[41m[m
 [m
[31m-    import com.projectNanuram.entity.Address;[m
[31m-    import com.projectNanuram.entity.Family;[m
[31m-    import com.projectNanuram.entity.MobileNumbers;[m
[31m-    import com.projectNanuram.entity.Person;[m
[31m-    import org.springframework.web.multipart.commons.CommonsMultipartFile;[m
[32m+[m[32mimport com.projectNanuram.entity.Address;[m[41m[m
[32m+[m[32mimport com.projectNanuram.entity.Family;[m[41m[m
[32m+[m[32mimport com.projectNanuram.entity.MobileNumbers;[m[41m[m
[32m+[m[32mimport com.projectNanuram.entity.Person;[m[41m[m
[32m+[m[32mimport org.springframework.web.multipart.commons.CommonsMultipartFile;[m[41m[m
 [m
[31m-    import java.io.FileNotFoundException;[m
[31m-    import java.io.FileOutputStream;[m
[31m-    import java.io.IOException;[m
[31m-    import java.text.ParseException;[m
[31m-    import java.util.ArrayList;[m
[31m-    import java.util.List;[m
[32m+[m[32mimport java.io.FileNotFoundException;[m[41m[m
[32m+[m[32mimport java.io.FileOutputStream;[m[41m[m
[32m+[m[32mimport java.io.IOException;[m[41m[m
[32m+[m[32mimport java.text.ParseException;[m[41m[m
[32m+[m[32mimport java.util.ArrayList;[m[41m[m
[32m+[m[32mimport java.util.List;[m[41m[m
 [m
[31m-    public class Processor {[m
[32m+[m[32mpublic class Processor {[m[41m[m
 [m
[31m-        public static List<Person> personprocessor(List<Person> personList , Family family)  {[m
[32m+[m[32m    public static List<Person> personprocessor(List<Person> personList, Family family) {[m[41m[m
 [m
[31m-            try{[m
[31m-                if (personList != null) {[m
[31m-                    for (Person person : personList) {[m
[31m-                        if (person != null) {[m
[31m-                            int age = AgeCalculator.age(person.getDOB());[m
[31m-                            person.setAge(age);[m
[32m+[m[32m        try {[m[41m[m
[32m+[m[32m            if (personList != null) {[m[41m[m
[32m+[m[32m                for (Person person : personList) {[m[41m[m
[32m+[m[32m                    if (person != null) {[m[41m[m
[32m+[m[32m                        int age = AgeCalculator.age(person.getDOB());[m[41m[m
[32m+[m[32m                        person.setAge(age);[m[41m[m
 [m
[31m-                            ageProcessor(person);[m
[32m+[m[32m                        ageProcessor(person);[m[41m[m
 [m
[31m-                            String id = person.getPersonId();[m
[31m-                            if(id == null || id.isEmpty()){[m
[32m+[m[32m                        String id = person.getPersonId();[m[41m[m
[32m+[m[32m                        if (id == null || id.isEmpty()) {[m[41m[m
 [m
[31m-                                String pId = IdentityHelper.personIdGenerator();[m
[31m-                                person.setPersonId(pId);[m
[31m-                            }[m
[32m+[m[32m                            String pId = IdentityHelper.personIdGenerator();[m[41m[m
[32m+[m[32m                            person.setPersonId(pId);[m[41m[m
[32m+[m[32m                        }[m[41m[m
 [m
 //                            if (person.getFamily() == null || person.getFamily().getFamilyId()==null || person.getFamily().getFamilyId().isEmpty())[m
[31m-                            person.setFamily(family);[m
[32m+[m[32m                        person.setFamily(family);[m[41m[m
[32m+[m[41m[m
[32m+[m[32m                        List<MobileNumbers> mobileNumbersList = person.getMobileNumbers();[m[41m[m
[32m+[m[41m[m
[32m+[m[32m                        person.setMobileNumbers(mobilenumberProcessor(mobileNumbersList, person));[m[41m[m
 [m
[31m-                            List<MobileNumbers> mobileNumbersList = person.getMobileNumbers();[m
[32m+[m[32m                        imageProcessor(person);[m[41m[m
 [m
[31m-                            person.setMobileNumbers(mobilenumberProcessor(mobileNumbersList, person) );[m
[32m+[m[32m                        if(person.getSpecialAbility().equalsIgnoreCase("True")){[m[41m[m
 [m
[31m-                            imageProcessor(person);[m
[32m+[m[32m                            person.setSpeciallyAble(true);[m[41m[m
 [m
                         }[m
[32m+[m[32m                        else{[m[41m[m
[32m+[m[32m                            person.setSpeciallyAble(false);[m[41m[m
[32m+[m[32m                        }[m[41m[m
 [m
                     }[m
 [m
                 }[m
[31m-            }catch (ParseException e){[m
[31m-                e.printStackTrace();[m
[32m+[m[41m[m
             }[m
[31m-            return personList;[m
[32m+[m[32m        } catch (ParseException e) {[m[41m[m
[32m+[m[32m            e.printStackTrace();[m[41m[m
         }[m
[32m+[m[32m        return personList;[m[41m[m
[32m+[m[32m    }[m[41m[m
 [m
 //----------------------------------------------------------------------------------------------------------------------[m
 [m
[31m-        private static void imageProcessor(Person person ) {[m
[31m-            String path = null;[m
[31m-            try{[m
[32m+[m[32m    private static void imageProcessor(Person person) {[m[41m[m
[32m+[m[32m        String path = null;[m[41m[m
[32m+[m[32m        try {[m[41m[m
[32m+[m[41m[m
             CommonsMultipartFile file = person.getImageFile();[m
[31m-            String filename = file.getOriginalFilename();[m
[31m-            System.out.println(file.getOriginalFilename());[m
[31m-            String[]str = filename.split("\\.");[m
[31m-            for(String st : str) System.out.print(st+" ");[m
[31m-            str[1] = "."+str[1];[m
[31m-            String baseDirPath = PropertiesResolver.getInstance().getBaseFilePath();[m
[31m-            String newFileName = person.getPersonId()+str[1];[m
[31m-            path = baseDirPath+newFileName;[m
[31m-            byte[] bytes = file.getBytes();[m
[31m-            FileOutputStream fos = new FileOutputStream(path);[m
[31m-            fos.write(bytes);[m
[31m-            fos.close();[m
[31m-            person.setImgUrl(newFileName);[m
[31m-            ImageHelper.resizeImage(newFileName);[m
[31m-[m
[31m-            } catch (FileNotFoundException e) {[m
[31m-                e.printStackTrace();[m
[32m+[m[41m[m
[32m+[m[32m            if(file != null && file.getSize() > 0) {[m[41m[m
[32m+[m[41m[m
[32m+[m[32m                String filename = file.getOriginalFilename();[m[41m[m
[32m+[m[32m                System.out.println(file.getOriginalFilename());[m[41m[m
[32m+[m[41m[m
[32m+[m[32m                String[] str = filename.split("\\.");[m[41m[m
[32m+[m[32m                str[1] = "." + str[1];[m[41m[m
[32m+[m[41m[m
[32m+[m[32m                String baseDirPath = PropertiesResolver.getInstance().getBaseFilePath();[m[41m[m
[32m+[m[32m                String newFileName = person.getPersonId() + str[1];[m[41m[m
[32m+[m[32m                path = baseDirPath + newFileName;[m[41m[m
[32m+[m[41m[m
[32m+[m[32m                byte[] bytes = file.getBytes();[m[41m[m
[32m+[m[32m                FileOutputStream fos = new FileOutputStream(path);[m[41m[m
[32m+[m[32m                fos.write(bytes);[m[41m[m
[32m+[m[32m                fos.close();[m[41m[m
[32m+[m[41m[m
[32m+[m[32m                person.setImgUrl(newFileName);[m[41m[m
[32m+[m[32m                ImageHelper.resizeImage(newFileName);[m[41m[m
             }[m
[31m-            catch (IOException e){[m
[31m-                e.printStackTrace();[m
[32m+[m[32m            else{[m[41m[m
[32m+[m[32m                person.setImgUrl("ina.jpg");[m[41m[m
             }[m
 [m
[32m+[m[32m        } catch (FileNotFoundException e) {[m[41m[m
[32m+[m[32m            e.printStackTrace();[m[41m[m
[32m+[m[32m        } catch (IOException e) {[m[41m[m
[32m+[m[32m            e.printStackTrace();[m[41m[m
         }[m
[32m+[m[41m[m
[32m+[m[32m    }[m[41m[m
 //----------------------------------------------------------------------------------------------------------------------[m
 [m
[31m-        private static List<MobileNumbers> mobilenumberProcessor(List<MobileNumbers> mobileNumbersList , Person person) {[m
[31m-            List<MobileNumbers> newlist = new ArrayList<>();[m
[31m-            if(!mobileNumbersList.isEmpty()){[m
[31m-                for (MobileNumbers number : mobileNumbersList) {[m
[31m-                    if (number.getMobileNumber() != null && !number.getMobileNumber().isEmpty()) {[m
[32m+[m[32m    private static List<MobileNumbers> mobilenumberProcessor(List<MobileNumbers> mobileNumbersList, Person person) {[m[41m[m
[32m+[m[32m        List<MobileNumbers> newlist = new ArrayList<>();[m[41m[m
[32m+[m[32m        if (!mobileNumbersList.isEmpty()) {[m[41m[m
[32m+[m[32m            for (MobileNumbers number : mobileNumbersList) {[m[41m[m
[32m+[m[32m                if (number.getMobileNumber() != null && !number.getMobileNumber().isEmpty()) {[m[41m[m
 [m
[31m-                        if (number.getPrimaryString().equalsIgnoreCase("true")) {[m
[31m-                            number.setPrimary(true);[m
[31m-                        } else {[m
[31m-                            number.setPrimary(false);[m
[31m-                        }[m
[31m-                        number.setPerson(person);[m
[31m-                        number.setId(person.getPersonId() + mobileNumbersList.indexOf(number));[m
[31m-                        newlist.add(number);[m
[32m+[m[32m                    if (number.getPrimaryString().equalsIgnoreCase("true")) {[m[41m[m
[32m+[m[32m                        number.setPrimary(true);[m[41m[m
[32m+[m[32m                    } else {[m[41m[m
[32m+[m[32m                        number.setPrimary(false);[m[41m[m
                     }[m
[32m+[m[32m                    number.setPerson(person);[m[41m[m
[32m+[m[32m                    number.setId(person.getPersonId() + mobileNumbersList.indexOf(number));[m[41m[m
[32m+[m[32m                    newlist.add(number);[m[41m[m
                 }[m
[31m-[m
             }[m
 [m
[31m-            return newlist;[m
[31m-[m
         }[m
[31m-//----------------------------------------------------------------------------------------------------------------------[m
 [m
[31m-        private static void ageProcessor(Person person){[m
[32m+[m[32m        return newlist;[m[41m[m
 [m
[31m-            int age = person.getAge();[m
[31m-            if (person.getGender().equalsIgnoreCase("Male")) {[m
[32m+[m[32m    }[m[41m[m
[32m+[m[32m//----------------------------------------------------------------------------------------------------------------------[m[41m[m
 [m
[31m-                System.out.println(person.getDOB().getClass());[m
[31m-                System.out.println(person.getDOB());[m
[31m-                if (age < 18) person.setBoy(true);[m
[31m-                else person.setMan(true);[m
[31m-                if(person.isMan() && age >= 60) person.setSenior(true);[m
[31m-            }[m
[32m+[m[32m    private static void ageProcessor(Person person) {[m[41m[m
 [m
[31m-            if(person.getGender().equalsIgnoreCase("Female")){[m
[31m-                if (age < 18) person.setGirl(true);[m
[31m-                else person.setWoman(true);[m
[31m-                if(person.isWoman() && age >= 60) person.setSenior(true);[m
[32m+[m[32m        int age = person.getAge();[m[41m[m
[32m+[m[32m        if (person.getGender().equalsIgnoreCase("Male")) {[m[41m[m
 [m
[31m-            }[m
[32m+[m[32m            System.out.println(person.getDOB().getClass());[m[41m[m
[32m+[m[32m            System.out.println(person.getDOB());[m[41m[m
[32m+[m[32m            if (age < 18) person.setBoy(true);[m[41m[m
[32m+[m[32m            else person.setMan(true);[m[41m[m
[32m+[m[32m            if (person.isMan() && age >= 60) person.setSenior(true);[m[41m[m
[32m+[m[32m        }[m[41m[m
 [m
[31m-            if(person.getStatus().equalsIgnoreCase("head")){[m
[31m-                person.setHead(true);[m
[31m-            }[m
[32m+[m[32m        if (person.getGender().equalsIgnoreCase("Female")) {[m[41m[m
[32m+[m[32m            if (age < 18) person.setGirl(true);[m[41m[m
[32m+[m[32m            else person.setWoman(true);[m[41m[m
[32m+[m[32m            if (person.isWoman() && age >= 60) person.setSenior(true);[m[41m[m
 [m
         }[m
[32m+[m[32m//----------------------------------------------------------------------------------------------------------------------[m[41m[m
 [m
[31m-        public static List<Address> addressProcessor(List<Address> addressList , Family family){[m
[32m+[m[32m        if (person.getStatus().equalsIgnoreCase("head")) {[m[41m[m
[32m+[m[32m            person.setHead(true);[m[41m[m
[32m+[m[32m        }[m[41m[m
 [m
[31m-            List<Address> newList = new ArrayList<>();[m
[32m+[m[3